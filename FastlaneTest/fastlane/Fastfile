# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
	cocoapods
  end
end


  desc "Push a new release build to the App Store"
  lane :release do
    #build_app(scheme: "FastlaneTest")
    #upload_to_app_store(skip_metadata: true, skip_screenshots: true)
    deliver(precheck_default_rule_level: error)
  end

  lane :beta do
    cert
    sigh(force:true)

     
    gym(scheme: "FastlaneTest",
	output_name: "NewGymBuild.ipa",
	export_method: "app-store",
	export_options: {
        provisioningProfiles: { 
            "com.getmyParking.FastlaneTest" => "com.getmyParking.FastlaneTest AppStore"
        }
    },
    silent: false,
    output_directory: "./Export"
	)
    pilot(username: "ravi@getmyparking.com",
	app_identifier: "com.getmyParking.FastlaneTest",
	changelog: "New build...",
	beta_app_description: "This build is to test fastlane automatic app distribution through TestFlight.",
	beta_app_feedback_email: "jushrita@getmyparking.com",
	groups: ["Fastlane Testers"],
	distribute_external: true,
	notify_external_testers: true,
	itc_provider: "DWLB7GQMW9")  
	
   end

  lane :beforeDistribution do
     sh("git add .")
     sh("git commit -m 'Some1'")
     push_to_git_remote
     sh("git checkout develop")
     sh("git pull origin develop")
     sh("git add .")
     sh("git commit -m 'Some2'")
     push_to_git_remote
     ensure_git_status_clean 
     ensure_git_branch(branch: "develop")
     sh("git checkout -b buildBumpBranch2")
     cert
     sigh(force:true)
     build_app(scheme:"FastlaneTest",
			sdk: "iOS 11.4"	)
     get_build_number
     increment_build_number(xcodeproj: "FastlaneTest.xcodeproj")
     sh("git add .")
     sh("git commit -m 'Version bumped'")
	push_to_git_remote
     #commit_version_bump(message: "Build Version Bump by fastlane",
	                 #xcodeproj: "FastlaneTest.xcodeproj")
     
     create_pull_request(repo: "Jushrita/Fastlane",
			title: "build no. bumped",
			head: "buildBumpBranch1",
			base: "develop")
   end	
